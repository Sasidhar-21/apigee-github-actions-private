//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var SchemaMigrations = newSchemaMigrationsTable("simple", "schema_migrations", "")

type SchemaMigrationsTable struct {
	mysql.Table

	//Columns
	Version mysql.ColumnInteger
	Dirty   mysql.ColumnBool

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

// AS creates new SchemaMigrationsTable with assigned alias
func (a SchemaMigrationsTable) AS(alias string) SchemaMigrationsTable {
	return newSchemaMigrationsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SchemaMigrationsTable with assigned schema name
func (a SchemaMigrationsTable) FromSchema(schemaName string) SchemaMigrationsTable {
	return newSchemaMigrationsTable(schemaName, a.TableName(), a.Alias())
}

func newSchemaMigrationsTable(schemaName, tableName, alias string) SchemaMigrationsTable {
	var (
		VersionColumn  = mysql.IntegerColumn("version")
		DirtyColumn    = mysql.BoolColumn("dirty")
		allColumns     = mysql.ColumnList{VersionColumn, DirtyColumn}
		mutableColumns = mysql.ColumnList{DirtyColumn}
	)

	return SchemaMigrationsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Version: VersionColumn,
		Dirty:   DirtyColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
