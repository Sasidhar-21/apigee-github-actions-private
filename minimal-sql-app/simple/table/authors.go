//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Authors = newAuthorsTable("simple", "authors", "")

type AuthorsTable struct {
	mysql.Table

	//Columns
	AuthorID mysql.ColumnInteger
	Name     mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

// AS creates new AuthorsTable with assigned alias
func (a AuthorsTable) AS(alias string) AuthorsTable {
	return newAuthorsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new AuthorsTable with assigned schema name
func (a AuthorsTable) FromSchema(schemaName string) AuthorsTable {
	return newAuthorsTable(schemaName, a.TableName(), a.Alias())
}

func newAuthorsTable(schemaName, tableName, alias string) AuthorsTable {
	var (
		AuthorIDColumn = mysql.IntegerColumn("author_id")
		NameColumn     = mysql.StringColumn("name")
		allColumns     = mysql.ColumnList{AuthorIDColumn, NameColumn}
		mutableColumns = mysql.ColumnList{NameColumn}
	)

	return AuthorsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		AuthorID: AuthorIDColumn,
		Name:     NameColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
